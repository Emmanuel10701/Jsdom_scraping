pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'your_dockerhub_username/your_project_name'
        DOCKER_CREDENTIALS = 'dockerhub_credentials' // Update with your credentials ID
        CONTAINER_NAME = 'your_container_name' // Define your container name
        DEPLOY_SERVER = 'your_server_ip_or_hostname' // Define your deployment server
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    echo 'Checking out the code from the repository...'
                    checkout scm
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    echo 'Building the Docker image...'
                    docker.build(DOCKER_IMAGE)
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    echo 'Logging into Docker Hub and pushing the image...'
                    docker.withRegistry('', DOCKER_CREDENTIALS) {
                        docker.image(DOCKER_IMAGE).push('latest')
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Deploying the application...'

                    // Stop and remove the existing container (if any)
                    sh """
                        docker stop ${CONTAINER_NAME} || true
                        docker rm ${CONTAINER_NAME} || true
                    """

                    // Run the new container
                    sh """
                        docker run -d --name ${CONTAINER_NAME} -p 80:80 ${DOCKER_IMAGE}:latest
                    """

                    echo 'Deployment successful!'
                }
            }
        }
    }

    post {
        always {
            script {
                echo 'Pipeline execution completed.'
                cleanWs() // Clean workspace after execution
            }
        }

        success {
            script {
                echo 'Pipeline executed successfully!'
            }
        }

        failure {
            script {
                echo 'Pipeline failed! Check logs for details.'
            }
        }
    }
}
